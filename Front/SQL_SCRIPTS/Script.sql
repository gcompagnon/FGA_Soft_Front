--------------------------------------------------
-------------- PARTIE UTILISATEUR ----------------
--------------------------------------------------
DROP TABLE UTILISATEUR
DROP TABLE TYPE_USER

CREATE TABLE TYPE_USER
	(
	   typeuser_id VARCHAR(3) PRIMARY KEY,
	   libelle VARCHAR(20) NOT NULL
	); 

CREATE TABLE UTILISATEUR
	( 
	  id VARCHAR(5) PRIMARY KEY,
	  nom VARCHAR(30),
	  prenom VARCHAR(30), 
	  admin BIT ,
	  typeutilisateur VARCHAR(3) REFERENCES TYPE_USER(typeuser_id),
	  derniere_connexion DATETIME,
	  derniere_deconnexion DATETIME DEFAULT '01/01/2000',
	  email VARCHAR(60)
	);

INSERT INTO TYPE_USER (TypeUser_Id, Libelle) VALUES ('Act','Action');
INSERT INTO TYPE_USER (TypeUser_Id, Libelle) VALUES ('Tx','Taux');
INSERT INTO TYPE_USER (TypeUser_Id, Libelle) VALUES ('Dev','Developpement');
INSERT INTO TYPE_USER (TypeUser_Id, Libelle) VALUES ('All','Allocation');
INSERT INTO TYPE_USER (TypeUser_Id, Libelle) VALUES ('Rep','Reporting');
INSERT INTO UTILISATEUR (Id,Nom,Prenom, Admin, TypeUtilisateur,email) VALUES ('SNV','AUGE','Benjamin',1,'Dev','bauge@federisga.fr');
INSERT INTO UTILISATEUR (Id,Nom,Prenom, Admin, TypeUtilisateur,email) VALUES ('KRG','COLL','Olivier',1,'Dev','ocoll@federisga.fr');
INSERT INTO UTILISATEUR (Id) VALUES ('OMEGA');
SELECT * FROM UTILISATEUR

--------------------------------------------------
-------------- PARTIE GENERALE -------------------
--------------------------------------------------
DROP TABLE PAYS
SELECT * FROM PAYS
CREATE TABLE PAYS 
   (
	   id VARCHAR(30) PRIMARY KEY,
	   iso2 VARCHAR(2),
       libelle VARCHAR(30),
	   libelle_anglais VARCHAR(30),
	   id_utilisateur VARCHAR(5) REFERENCES UTILISATEUR(id)
	);

DROP TABLE TMP_PAYS_OMEGA
CREATE TABLE TMP_PAYS_OMEGA 
   (
	   id VARCHAR(30) PRIMARY KEY,
       libelle VARCHAR(30),
	   id_utilisateur VARCHAR(5) REFERENCES UTILISATEUR(id)
	);

DROP TABLE ZONE
SELECT * FROM ZONE
CREATE TABLE ZONE 
   (
	   id VARCHAR(30) PRIMARY KEY,
       libelle VARCHAR(30),
	);

DROP TABLE ASSOCIATION_PAYS_ZONE
SELECT * FROM ASSOCIATION_PAYS_ZONE
CREATE TABLE ASSOCIATION_PAYS_ZONE
   (
	   id_pays VARCHAR(30) REFERENCES PAYS(id) PRIMARY KEY,
       id_zone VARCHAR(30) REFERENCES ZONE(id),
	);

DELETE FROM TMP_SOUS_SECTEUR_OMEGA
DELETE FROM TMP_SECTEUR_OMEGA
DELETE FROM SECTEUR
DELETE FROM SOUS_SECTEUR

DROP TABLE SECTEUR
CREATE TABLE SECTEUR 
   (
	   id VARCHAR(30) PRIMARY KEY,
       libelle VARCHAR(60), 
	   id_utilisateur VARCHAR(5) REFERENCES UTILISATEUR(id) 
	);

DROP TABLE SOUS_SECTEUR
CREATE TABLE SOUS_SECTEUR 
   (
	   id VARCHAR(30) PRIMARY KEY,
	   id_secteur VARCHAR(30) REFERENCES SECTEUR(id),
       libelle VARCHAR(60), 
	   id_utilisateur VARCHAR(5) REFERENCES UTILISATEUR(id) 
	);

DROP TABLE TMP_SECTEUR_OMEGA
CREATE TABLE TMP_SECTEUR_OMEGA 
   (
	   id VARCHAR(30) PRIMARY KEY,
       libelle VARCHAR(60), 
	   id_utilisateur VARCHAR(5) REFERENCES UTILISATEUR(id) 
	);

DROP TABLE TMP_SOUS_SECTEUR_OMEGA
CREATE TABLE TMP_SOUS_SECTEUR_OMEGA 
   (
	   id VARCHAR(30) PRIMARY KEY,
	   id_secteur VARCHAR(30) REFERENCES SECTEUR(id),
       libelle VARCHAR(60), 
	   id_utilisateur VARCHAR(5) REFERENCES UTILISATEUR(id) 
	);


--------------------------------------------------
---------- PARTIE LOT PORTEFEUILLE ---------------
--------------------------------------------------
DROP TABLE PTF_LOT_GROUPE
DROP TABLE PTF_LOT_COMPTE
DROP TABLE PTF_LOT
DELETE PTF_LOT_GROUPE
DELETE PTF_LOT_COMPTE
DELETE PTF_LOT

CREATE TABLE PTF_LOT
	(
	   id_lot VARCHAR(60) PRIMARY KEY,
	   libelle_lot VARCHAR(60),
       type_lot VARCHAR(3)
	);

CREATE TABLE PTF_LOT_GROUPE
	(
	   id_lot VARCHAR(60) REFERENCES PTF_LOT(id_lot),
	   groupe VARCHAR(60),

	   CONSTRAINT pk_PTF_LOT_GROUPE PRIMARY KEY (id_lot,groupe)
	);

CREATE TABLE PTF_LOT_COMPTE
	(
	   id_lot VARCHAR(60) REFERENCES PTF_LOT(id_lot),
	   compte VARCHAR(60),

	   CONSTRAINT pk_PTF_LOT_COMPTE PRIMARY KEY (id_lot,compte)
	);

--------------------------------------------------
------ PARTIE TRANS : OPCVM - MANDAT - PROXY------
--------------------------------------------------
DROP TABLE ZONE_GEOGRAPHIQUE
CREATE TABLE ZONE_GEOGRAPHIQUE
	(
	   Pays VARCHAR(30) PRIMARY KEY ,
       Zone VARCHAR(30)
	);


DROP TABLE PTF_TYPE_ACTIF
CREATE TABLE PTF_TYPE_ACTIF
	(
	   Produit VARCHAR(60) PRIMARY KEY,
	   Types VARCHAR(30)
	); 

DROP TABLE PTF_CARAC_OPCVM
CREATE TABLE PTF_CARAC_OPCVM
	(
	   Libelle VARCHAR(60) PRIMARY KEY,
	   Pays VARCHAR(30),
       Types VARCHAR(30)
	);

DROP TABLE PTF_TYPE_DE_DETTE
CREATE TABLE PTF_TYPE_DE_DETTE
	(
	   libelle VARCHAR(100) PRIMARY KEY,
       Types VARCHAR(100)
	);


DROP TABLE PTF_FGA
CREATE TABLE PTF_FGA
	(
       Groupe VARCHAR(25),
	   Dateinventaire DATETIME NOT NULL,
       Compte VARCHAR(60) NOT NULL,
       ISIN_Ptf VARCHAR(12),
       Libelle_Ptf VARCHAR(60),
       code_Titre VARCHAR(15) NOT NULL,
       isin_titre VARCHAR(12),
       Libelle_Titre VARCHAR(60),
       Valeur_Boursiere FLOAT,
	   Coupon_Couru FLOAT,²
       Valeur_Comptable FLOAT,
       Coupon_Couru_Comptable FLOAT,
	   PMV FLOAT,
	   PMV_CC FLOAT,
       Type_Produit VARCHAR(60),
	   Devise_Titre VARCHAR(3),
       Secteur VARCHAR(60),
	   Sous_Secteur VARCHAR(60),
       Pays VARCHAR(60),
       Emetteur VARCHAR(60),
       Rating VARCHAR(4),
       Grp_Emetteur VARCHAR(60),
       maturite DATETIME NULL,
       duration FLOAT,
	   sensibilite FLOAT,
       coursclose FLOAT,
       quantite FLOAT,
	   coupon FLOAT,
	   rendement FLOAT,

	   CONSTRAINT pk_PTF_FGA PRIMARY KEY (Dateinventaire,Compte,code_Titre)
	);

DROP TABLE PTF_CHORUS
CREATE TABLE PTF_CHORUS
	(
		Compte VARCHAR(60) NOT NULL,
		Libelle_Ptf VARCHAR(60),
		Code_Titre VARCHAR(15) NOT NULL,
		Code_Titre_Ref VARCHAR(15) NOT NULL,
		Libelle_Titre VARCHAR(60),
		Date_Inventaire DATETIME NOT NULL,
		Type_Produit VARCHAR(60),
		Quantite FLOAT,
		cours FLOAT,
		Valeur_Comptable FLOAT,
		Valeur_Boursiere FLOAT,
		prix_ref FLOAT,
		Coupon_Couru FLOAT,

		CONSTRAINT pk_PTF_CHORUS PRIMARY KEY (Date_Inventaire,compte,Code_Titre)
	);

DROP TABLE PTF_CHORUS_RAPPORT
CREATE TABLE PTF_CHORUS_RAPPORT
	(
		Date DATETIME,
		type_pb VARCHAR(60),
		Compte_OMEGA VARCHAR(60),
		Compte_CHORUS VARCHAR(60),
		Libelle_Ptf VARCHAR(60),
		Code_Titre VARCHAR(15),
		Libelle_Titre VARCHAR(60),
		Type_Produit VARCHAR(60),
		Quantite_OMEGA FLOAT,
		Quantite_CHORUS FLOAT,
		cours_OMEGA FLOAT,
		cours_CHORUS FLOAT,
		Vc_OMEGA FLOAT,
		Vc_CHORUS FLOAT,
		Cc_OMEGA FLOAT,
		Cc_CHORUS FLOAT,
		Px_ref_CHORUS FLOAT,
		Ecart FLOAT,
	);

DROP TABLE PTF_DOUBLON_CHORUS
CREATE TABLE PTF_DOUBLON_CHORUS
	(
		compte VARCHAR(60) NOT NULL,
		Libelle_Ptf VARCHAR(60),
		Code_Titre VARCHAR(15) NOT NULL,
		Code_Titre_Ref VARCHAR(15) NOT NULL,
		Libelle_Titre VARCHAR(60),
		Date_Inventaire DATETIME NOT NULL,
		Type_Produit VARCHAR(60),
		Quantite FLOAT,
		cours FLOAT,
		Valeur_Comptable FLOAT,
		Valeur_Boursiere FLOAT,
		prix_ref FLOAT,
		Coupon_Couru FLOAT,
	);

DROP TABLE PTF_AN
CREATE TABLE PTF_AN
	(
	    compte VARCHAR(12),
		ISIN_Ptf VARCHAR(12),
		Libelle_Ptf VARCHAR(60),
		date DATETIME,
		AN FLOAT

		CONSTRAINT pk_PTF_AN PRIMARY KEY (compte,date)
	);

DROP TABLE PTF_PROXY
CREATE TABLE PTF_PROXY
	(  Date DATETIME,
	   Code_Proxy VARCHAR(20),
       Libelle_Proxy VARCHAR(60),
	   code_titre VARCHAR(20),
	   Libelle_Titre VARCHAR(60),
	   Poids_VB FLOAT,
       Poids_CC FLOAT,
       Type_Produit VARCHAR(60),
       Devise_Titre VARCHAR(3),
       Secteur VARCHAR(60),
	   Sous_Secteur	VARCHAR(60),
	   Pays VARCHAR(30),
       Emetteur VARCHAR(60),
	   Rating VARCHAR(4),
       Groupe_Emet VARCHAR(60),
	   Maturité DATETIME,
       Duration FLOAT,
	   Sensibilite FLOAT,

	   CONSTRAINT pk_PTF_PROXY PRIMARY KEY (Date, Code_Proxy, code_titre)
	);

DROP TABLE PTF_PARAM_PROXY
CREATE TABLE PTF_PARAM_PROXY
	(
		Date DATETIME,
	    Isin_Titre VARCHAR(12),
		Libellé_titre VARCHAR(60),
		Code_Proxy VARCHAR(60),
		Libellé_Proxy VARCHAR(60),
		Source VARCHAR(30)

		CONSTRAINT pk_PARAM_PROXY PRIMARY KEY (Date,Isin_Titre,Libellé_titre)
	);

DROP TABLE PTF_TRANSPARISE
CREATE TABLE PTF_TRANSPARISE
	(
       Groupe VARCHAR(25),
	   Dateinventaire DATETIME NOT NULL,
       Compte VARCHAR(60) NOT NULL,
       ISIN_Ptf VARCHAR(12),
       Libelle_Ptf VARCHAR(60),
       code_Titre VARCHAR(15) NOT NULL,
       isin_titre VARCHAR(15),
       Libelle_Titre VARCHAR(60),
       Valeur_Boursiere FLOAT,
	   Coupon_Couru FLOAT,
       Valeur_Comptable FLOAT,
       Coupon_Couru_Comptable FLOAT,
	   PMV FLOAT,
	   PMV_CC FLOAT,
       Type_Produit VARCHAR(60),
	   Devise_Titre VARCHAR(3),
       Secteur VARCHAR(60),
	   Sous_Secteur VARCHAR(60),
       Pays VARCHAR(60),
       Emetteur VARCHAR(60),
       Rating VARCHAR(4),
       Grp_Emetteur VARCHAR(60),
       maturite DATETIME NULL,
       duration FLOAT,
	   sensibilite FLOAT,
       coursclose FLOAT,
       quantite FLOAT,
	   pct_det_Niv_0 FLOAT,	 -- si le titre est un fonds: pourcentage de détention de ce fonds pour cette ligne (ie: cette ligne représente x% du fonds ouvert en transparence)
	   Isin_proxy_Niv_1 VARCHAR(12), -- le code du proxy utilisé pour la transparence Niv1
	   Isin_origine_Niv_1 VARCHAR(12) NOT NULL,
	   pct_det_Niv_1 FLOAT,	
	   Isin_proxy_Niv_2 VARCHAR(12), -- le code du proxy utilisé pour la transparence Niv2	   
	   Isin_origine_Niv_2 VARCHAR(12) NOT NULL,
	   pct_det_Niv_2 FLOAT,
	   Isin_proxy_Niv_3 VARCHAR(12), -- le code du proxy utilisé pour la transparence Niv2	   
	   Isin_origine_Niv_3 VARCHAR(12) NOT NULL,
	   pct_det_Niv_3 FLOAT,	   
	   --Type_de_mandat VARCHAR(1),
	   Zone_Géo VARCHAR(60),
	   Type_actif VARCHAR(60),
	   Type_de_dette VARCHAR(60),
       Groupe_rating VARCHAR(4),
       col1 VARCHAR(30),
       col2 VARCHAR(30),
       Vie_residuelle FLOAT,
       Tranche_de_maturite VARCHAR(15),
	   Numero_Niveau INT,
	   rendement FLOAT,
       coupon FLOAT

	   CONSTRAINT pk_PTF_TRANSPARISE PRIMARY KEY (Dateinventaire,Compte,code_Titre,Isin_origine_Niv_1,Isin_origine_Niv_2,Isin_origine_Niv_3,numero_niveau)
	);



--------------------------------------------------
---------- PARTIE BASE EMETTEURS------------------
--------------------------------------------------
DROP TABLE TX_RECOMMANDATION_SOUS_SECTEUR
DROP TABLE TX_RECOMMANDATION_PAYS
DROP TABLE TX_RECOMMANDATION
DROP TABLE TX_RATING
DROP TABLE TX_RACINE
DROP TABLE TX_EMETTEUR
DROP TABLE TX_EMETTEUR_FICHIER
DROP TABLE TX_FICHIER
DROP TABLE TX_HISTO_RECOMMANDATION
DROP TABLE TX_HISTO_RATING
--DROP TABLE TX_EMETTEUR
DROP TABLE TX_GROUPE
DROP TABLE TX_SIGNATURE

DROP TABLE TMP_SIGNATURE_OMEGA
--SELECT * FROM TMP_SIGNATURE_OMEGA
CREATE TABLE TMP_SIGNATURE_OMEGA
	(
		code VARCHAR(30), --PRIMARY KEY,
		libelle VARCHAR(100),
		id_groupe VARCHAR(30),
		libelle_groupe VARCHAR(150),
		id_secteur VARCHAR(30),
		libelle_secteur VARCHAR(60),
		id_sous_secteur VARCHAR(30),
		libelle_sous_secteur VARCHAR(60),
		id_pays VARCHAR(30),
		libelle_pays VARCHAR(30),
		interneCT VARCHAR(4),
		interneLT VARCHAR(4),
		note_isr FLOAT
	);



CREATE TABLE TX_RATING
	(
	   id VARCHAR(7) PRIMARY KEY,
	   agence VARCHAR(20),
	   groupe_rating VARCHAR(4),
	   rating VARCHAR(4),
	   type_rating VARCHAR(2),
	   ordre FLOAT
	);


--A supprimer quand les ratings seront dans OMEGA-------------
CREATE TABLE TX_RATING_EMETTEUR
	(
	   id_emetteur VARCHAR(30) PRIMARY KEY,
	   rating_in_CT VARCHAR(4) ,
	   rating_in_LT VARCHAR(4) 
	);
update TMP_SIGNATURE_OMEGA
set interneLT = t.rating_in_LT
from TMP_SIGNATURE_OMEGA o, TX_RATING_EMETTEUR t
where  o.code= t.id_emetteur
SELECT * FROm TMP_SIGNATURE_OMEGA
---------------------------------------------------------------

CREATE TABLE TX_RECOMMANDATION
	(
	   id VARCHAR(3) PRIMARY KEY,
	   libelle VARCHAR(10),
	   description VARCHAR(30)
	);

DROP TABLE TX_RECOMMANDATION_PAYS
CREATE TABLE TX_RECOMMANDATION_PAYS
	(
	   id_pays VARCHAR(30) REFERENCES PAYS(id),
	   date DATETIME,
	   id_recommandation VARCHAR(3) REFERENCES TX_RECOMMANDATION(id),
	   id_utilisateur VARCHAR(5) REFERENCES UTILISATEUR(id),
       commentaire VARCHAR(MAX),
	   id_recommandation_isr VARCHAR(3) REFERENCES TX_RECOMMANDATION(id),

	   CONSTRAINT pk_TX_RECOMMANDATION_PAYS PRIMARY KEY(id_pays,date)
	);

DROP TABLE TX_RECOMMANDATION_SOUS_SECTEUR
CREATE TABLE TX_RECOMMANDATION_SOUS_SECTEUR
	(
	   id_sous_secteur VARCHAR(30) REFERENCES SOUS_SECTEUR(id),
	   date DATETIME,
	   id_recommandation VARCHAR(3) REFERENCES TX_RECOMMANDATION(id),
	   id_utilisateur VARCHAR(5) REFERENCES UTILISATEUR(id),
       commentaire VARCHAR(MAX),
	   id_recommandation_isr VARCHAR(3) REFERENCES TX_RECOMMANDATION(id),

	   CONSTRAINT pk_TX_RECOMMANDATION_SOUS_SECTEUR PRIMARY KEY(id_sous_secteur,date)
	);

--SELECT * FROM TX_GROUPE
CREATE TABLE TX_GROUPE
	(
	   id VARCHAR(30) PRIMARY KEY,
	   libelle VARCHAR(MAX),
	   id_utilisateur VARCHAR(5) REFERENCES UTILISATEUR(id)
	);

--SELECT * FROM TX_SIGNATURE
CREATE TABLE TX_SIGNATURE
	(
	   code VARCHAR(30) PRIMARY KEY,
	   libelle VARCHAR(100),
	   commentaire VARCHAR(MAX),
	   commentaire2 VARCHAR(MAX),
	   recommandation VARCHAR(MAX),
	   description VARCHAR(MAX),
	   id_groupe VARCHAR(30) REFERENCES TX_GROUPE(id),
	   id_recommandation VARCHAR(3) REFERENCES TX_RECOMMANDATION(id),
	   id_secteur VARCHAR(30) REFERENCES SECTEUR(id),
	   id_sous_secteur VARCHAR(30) REFERENCES SOUS_SECTEUR(id),
	   id_pays VARCHAR(30) REFERENCES PAYS(id),
	   id_rating_Moo_CT VARCHAR(7) REFERENCES TX_RATING(id),
	   id_rating_Moo_LT VARCHAR(7) REFERENCES TX_RATING(id),
	   id_rating_Sp_CT VARCHAR(7) REFERENCES TX_RATING(id),
	   id_rating_Sp_LT VARCHAR(7) REFERENCES TX_RATING(id),
	   id_rating_Fi_CT VARCHAR(7) REFERENCES TX_RATING(id),
	   id_rating_Fi_LT VARCHAR(7) REFERENCES TX_RATING(id),
	   id_rating_In_CT VARCHAR(7) REFERENCES TX_RATING(id),
       id_rating_In_LT VARCHAR(7) REFERENCES TX_RATING(id),
	   id_utilisateur VARCHAR(5),
	   note_isr FLOAT
	);


CREATE TABLE TX_HISTO_RECOMMANDATION
	(
	   id_recommandation VARCHAR(3) REFERENCES TX_RECOMMANDATION(id),
	   code_signature VARCHAR(30) REFERENCES TX_SIGNATURE(code),
	   date DATETIME,
	   id_utilisateur VARCHAR(5) REFERENCES UTILISATEUR(id),

	   CONSTRAINT pk_TX_HISTO_RECOMMANDATION PRIMARY KEY(id_recommandation,code_signature,date)
	);

--SELECT * FROM TX_HISTO_RATING
CREATE TABLE TX_HISTO_RATING
	(
	   id_rating VARCHAR(7) REFERENCES TX_RATING(id),
	   code_signature VARCHAR(30) REFERENCES TX_SIGNATURE(code),
	   date DATETIME,
	   id_utilisateur VARCHAR(5) REFERENCES UTILISATEUR(id),

	   CONSTRAINT pk_TX_HISTO_RATING PRIMARY KEY(id_rating,code_signature,date)
	);


CREATE TABLE TX_EMETTEUR_FICHIER
    (
		id VARCHAR(5) PRIMARY KEY,
		libelle VARCHAR(60)	
	);

--SELECT * FROM TX_FICHIER
--DROP TABLE TX_FICHIER


CREATE TABLE TX_FICHIER
    (
		code_signature VARCHAR(30) REFERENCES TX_SIGNATURE(code),
		nom VARCHAR(100),
		date DATETIME,
		id_utilisateur VARCHAR(5) REFERENCES UTILISATEUR(id),
		id_emetteur_fichier VARCHAR(5) REFERENCES TX_EMETTEUR_FICHIER(id),
		note VARCHAR(30)

		CONSTRAINT pk_TX_FICHIER PRIMARY KEY(code_signature,nom)		
	);

--DELETE FROM TX_RACINE
CREATE TABLE TX_RACINE
    (
		chemin VARCHAR(200) PRIMARY KEY,
	);


--DELETE TX_RECOMMANDATION
--DELETE TX_RATING
--DELETE TX_RACINE
--DELETE TX_EMETTEUR
--DELETE TX_EMETTEUR_FICHIER
DELETE TX_RECOMMANDATION_SOUS_SECTEUR
DELETE TX_RECOMMANDATION_PAYS
DELETE TX_FICHIER
DELETE TX_HISTO_RECOMMANDATION
DELETE TX_HISTO_RATING
DELETE TX_GROUPE
DELETE TX_SIGNATURE


--------------------------------------------------
---------- PARTIE TAUX  --------------------------
--------------------------------------------------
DROP TABLE TX_IBOXX_CORRESPONDANCE
--SELECT * FROM TX_IBOXX_CORRESPONDANCE
CREATE TABLE TX_IBOXX_CORRESPONDANCE
    (
		secteur VARCHAR(60),
		sous_secteur VARCHAR(60),
		level2 VARCHAR(60),
		level4 VARCHAR(60),
		debt VARCHAR(7),
		
		CONSTRAINT pk_TX_IBOXX_CORRESPONDANCE PRIMARY KEY(secteur,sous_secteur)		
	);

DROP TABLE TX_IBOXX_RAPPORT
CREATE TABLE TX_IBOXX_RAPPORT
    (
		date DATETIME,
		niveau VARCHAR(60),
		level2 VARCHAR(60),
		level4 VARCHAR(60),
		debt VARCHAR(7),
		country VARCHAR(120),
		poids_Iboxx FLOAT,
		poids_prime_oblig FLOAT,
		ecart_poids FLOAT,
		apport_Iboxx FLOAT,
		apport_prime_oblig FLOAT,
		ecart_apport FLOAT ,

		CONSTRAINT pk_TX_RAPPORT PRIMARY KEY(date,niveau, level2, level4, debt, country)		
	);

DROP TABLE TX_IBOXX_RAPPORT_RATING
CREATE TABLE TX_IBOXX_RAPPORT_RATING
    (
		date DATETIME,
		niveau VARCHAR(60),
		groupe VARCHAR(60),
		rating VARCHAR(4),
		poids_Iboxx FLOAT,
		poids_prime_oblig FLOAT,
		ecart_poids FLOAT,
		apport_Iboxx FLOAT,
		apport_prime_oblig FLOAT,
		ecart_apport FLOAT ,

		CONSTRAINT pk_TX_IBOXX_RAPPORT_RATING PRIMARY KEY(date,niveau, groupe, rating)		
	);

DROP TABLE TX_IBOXX_RAPPORT_STRATES
CREATE TABLE TX_IBOXX_RAPPORT_STRATES
    (
		date DATETIME,
		niveau VARCHAR(60),
		strates VARCHAR(60),
		poids_Iboxx FLOAT,
		poids_prime_oblig FLOAT,
		ecart_poids FLOAT,
		apport_Iboxx FLOAT,
		apport_prime_oblig FLOAT,
		ecart_apport FLOAT ,

		CONSTRAINT pk_TX_IBOXX_RAPPORT_STRATES PRIMARY KEY(date,niveau, strates)		
	);

DROP TABLE TX_IBOXX_RAPPORT_PRIME
CREATE TABLE TX_IBOXX_RAPPORT_PRIME
    (
		date DATETIME,
		niveau VARCHAR(60),
		code_titre VARCHAR(15),
		libelle_titre VARCHAR(60),
		nominal FLOAT,
		tx_rdt FLOAT,
		cours FLOAT,
		coupon_couru FLOAT,
		evaluation FLOAT,
		vie_residuelle FLOAT,
		duration FLOAT,
		sensibilite FLOAT,
		rating VARCHAR(4),
		actif FLOAT,
		apport_sensibilite FLOAT

		CONSTRAINT pk_TX_IBOXX_RAPPORT_PRIME PRIMARY KEY(date,libelle_titre)		
	);

DROP TABLE TX_IBOXX_RAPPORT_EMETTEUR
CREATE TABLE TX_IBOXX_RAPPORT_EMETTEUR
    (
		date DATETIME,
		niveau VARCHAR(60),
		emetteur VARCHAR(60),
		isin_titre VARCHAR(12), 
		emission VARCHAR(60),
		poids_Iboxx FLOAT,
		poids_prime_oblig FLOAT,
		ecart_poids FLOAT,
		apport_Iboxx FLOAT,
		apport_prime_oblig FLOAT,
		ecart_apport FLOAT ,

		CONSTRAINT pk_TX_IBOXX_RAPPORT_EMETTEUR PRIMARY KEY(date,emetteur,isin_titre)	
	)

DROP TABLE TX_IBOXX_RAPPORT_EMETTEUR2
CREATE TABLE TX_IBOXX_RAPPORT_EMETTEUR2
    (
		date DATETIME,
		niveau VARCHAR(60),
		emetteur VARCHAR(60),
		isin_titre VARCHAR(12), 
		emission VARCHAR(60),
		poids_Iboxx FLOAT,
		poids_prime_oblig FLOAT,
		ecart_poids FLOAT,
		apport_Iboxx FLOAT,
		apport_prime_oblig FLOAT,
		ecart_apport FLOAT ,

		CONSTRAINT pk_TX_IBOXX_RAPPORT_EMETTEUR2 PRIMARY KEY(date,emetteur,isin_titre)	
	)

DROP TABLE TX_IBOXX_RAPPORT_PAYS
CREATE TABLE TX_IBOXX_RAPPORT_PAYS
    (
		date DATETIME,
		niveau VARCHAR(60),
		zone VARCHAR(60),
		pays VARCHAR(60),
		poids_Iboxx FLOAT,
		poids_prime_oblig FLOAT,
		ecart_poids FLOAT,
		apport_Iboxx FLOAT,
		apport_prime_oblig FLOAT,
		ecart_apport FLOAT ,

		CONSTRAINT pk_TX_IBOXX_RAPPORT_PAYS PRIMARY KEY(date,pays,Zone)	
	)
	
	
DROP TABLE TX_IBOXX_CNTRY_OF_RISK
CREATE TABLE TX_IBOXX_CNTRY_OF_RISK
    (
		isin VARCHAR(12),
		iso2 VARCHAR(2) REFERENCES PAYS(iso2),
		
		CONSTRAINT pk_TX_IBOXX_CNTRY_OF_RISK PRIMARY KEY(isin,iso2)	
	)


DROP TABLE TX_IBOXX
CREATE TABLE TX_IBOXX
	(
		ISIN VARCHAR(12),
		BondID VARCHAR(7),
		Date DATETIME,
		IssuerName VARCHAR(160),
		IssuerTicker VARCHAR(6),
		CouponRate FLOAT,
		MaturityDate DATETIME,
		Country VARCHAR(120),
		CouponFrequency INT,
		FirstSettlementDate DATETIME,
		FirstAccrualDate DATETIME,
		FirstCouponDate DATETIME,
		Daycount VARCHAR(30),
		Level0 VARCHAR(3),
		Level1 VARCHAR(60),
		Level2 VARCHAR(60),
		Level3 VARCHAR(60),
		Level4 VARCHAR(160),
		Level5 VARCHAR(160),
		Level6 VARCHAR(160),
		Rating VARCHAR(4),
		Debt VARCHAR(3),
		Tier VARCHAR(5),
		BidPrice FLOAT,
		AskPrice FLOAT,
		IndexPrice FLOAT,
		AccruedInterest FLOAT,													
		Life FLOAT,
		SemiAnnualYield FLOAT,
		AnnualYield FLOAT,
		NativeYield FLOAT,
		Duration FLOAT,
		SemiAnnualModDuration FLOAT,
		AnnualModDuration FLOAT,
		NativeModDuration FLOAT,
		SemiAnnualConvexity FLOAT,
		AnnualConvexity FLOAT,
		NativeConvexity FLOAT,
		CouponAdjustment FLOAT,
		CouponPaymentAmount FLOAT,
		OutstandingAmount FLOAT,
		MarketValue FLOAT,
		IndexWeight FLOAT,
		RedemptionFactor FLOAT,
		BenchmarkISIN VARCHAR(12),
		Benchmark VARCHAR(60),
		SemiAnnualBenchmarkSpread FLOAT,
		AnnualBenchmarkSpread FLOAT,
		SwapSpread FLOAT,
		AssetSwapMargin FLOAT,
		ZSpread FLOAT,	

		CONSTRAINT pk_TX_IBOXX PRIMARY KEY(ISIN,Date)	
	);


/*DROP TABLE test
CREATE TABLE test
    (
		lib VARCHAR(1),
		niv INT	
	);
INSERT INTO test(lib, niv) VALUES ('A',1)
INSERT INTO test(lib, niv) VALUES ('A',2)
INSERT INTO test(lib, niv) VALUES ('B',1)
INSERT INTO test(lib, niv) VALUES ('C',2)
SELECT lib FROM test where niv=1
UNION
SELECT lib FROM test where niv=2
SELECT * from test where date = '08/06/2011'
*/

CREATE TABLE [dbo].[PTF_RAPPORT](
	[cle] [char](20)  NOT NULL,
	[libelle] [varchar](60)  NULL,	
	[valeur] [float] NULL,	
	[groupe] [varchar](25)NOT NULL,	
    [date] [datetime] NOT NULL,
    [ordreGroupe] [int] NULL,
    [classementRubrique] [real] NULL,
    [rubrique] [varchar](120) NOT NULL,
	CONSTRAINT pk_PTF_RAPPORT PRIMARY KEY(Date,cle,rubrique,groupe)	
) 
CREATE TABLE [dbo].[PTF_RAPPORT_NIV2](
	[cle] [char](20)  NOT NULL,
    [date] [datetime] NOT NULL,
    [rubrique] [varchar](120) NOT NULL,
    [classementRubrique] [real] NULL,
    [sousRubrique] [varchar](120) NOT NULL,
    [classementSousRubrique] [real] NULL,

	[groupe] [varchar](25) NOT NULL,	
	[ordreGroupe] [int] NULL,

	[libelle] [varchar](60)  NULL,
	[valeur] [float] NULL,
	CONSTRAINT pk_PTF_RAPPORT_NIV2 PRIMARY KEY(Date,cle,rubrique,sousRubrique,groupe)	
) 

GO

CREATE TABLE [dbo].[TMP_RECAP_OP](
grp_emetteur [varchar](120) NOT NULL,
mois_operation int,
annee_operation int,
type_operation char(1),
montant float 
)

----------------PARTIE ACTION
DROP TABLE ACT_INDUSTRY
CREATE TABLE ACT_INDUSTRY
	(
	   id VARCHAR(4) PRIMARY KEY,
	   libelle VARCHAR(60) 
	);
   
DROP TABLE ACT_SUPERSECTOR
CREATE TABLE ACT_SUPERSECTOR
	(
	   id VARCHAR(4) PRIMARY KEY,
	   libelle VARCHAR(60),
	   id_industry VARCHAR(4)  REFERENCES ACT_INDUSTRY(id) 
	);

DROP TABLE ACT_SECTOR
CREATE TABLE ACT_SECTOR
	(
	   id VARCHAR(4) PRIMARY KEY,
	   id_supersector VARCHAR(4) REFERENCES ACT_SUPERSECTOR(id),
	   libelle VARCHAR(60)
	);
	
DROP TABLE ACT_SUBSECTOR
CREATE TABLE ACT_SUBSECTOR
	(
	   id VARCHAR(4) PRIMARY KEY,
	   id_sector VARCHAR(4) REFERENCES ACT_SECTOR(id),
	   libelle VARCHAR(60),
	   id_fga_sector VARCHAR(4)REFERENCES ACT_FGA_SECTOR(id) 
	);
	
--W  : winsorized
--WM : winso + marché
--WS : winso + sector
DROP TABLE ACT_DATA_FACTSET
CREATE TABLE ACT_DATA_FACTSET
	(
		DATE DATETIME,
		ISIN VARCHAR(12),
		COMPANY_NAME VARCHAR(100),
		ICB_INDUSTRY VARCHAR(4) REFERENCES ACT_INDUSTRY(id),
		ICB_SUPERSECTOR VARCHAR(4) REFERENCES ACT_SUPERSECTOR(id),
		ICB_SECTOR VARCHAR(4) REFERENCES ACT_SECTOR(id),
		ICB_SUBSECTOR VARCHAR(4) REFERENCES ACT_SUBSECTOR(id),
		FGA_SECTOR VARCHAR(4),
		SXXP FLOAT,
		SXXA FLOAT,
		SXXE FLOAT,
		IS_EURO VARCHAR(1),
		COUNTRY CHAR(2) REFERENCES [ref].[COUNTRY](iso2),
		CURRENCY VARCHAR(3),
		MARKET_CAP_EUR FLOAT,
		SALES_CY_EUR FLOAT,
		SHARES_OUT FLOAT,
		SH_EQY_LY FLOAT,
		SH_EQY_CY FLOAT,
		SH_EQY_NY FLOAT,
		SH_EQY_NTM FLOAT,
		PRICE FLOAT,
		LIQUIDITY FLOAT, 
		LIQUIDITY_TEST VARCHAR(1),
		CURRENT_YEAR VARCHAR(4),
		SALES_LY  FLOAT,
		SALES_CY FLOAT,
		SALES_NY FLOAT,
		EBITDA_LY FLOAT,
		EBITDA_CY FLOAT,
		EBITDA_NY FLOAT,
		CAPEX_LY FLOAT,
		CAPEX_CY FLOAT,
		CAPEX_NY FLOAT,
		CAPEX_SALES_LY FLOAT,
		CAPEX_SALES_CY FLOAT,
		CAPEX_SALES_NY FLOAT,
		EBIT_LY FLOAT,
		EBIT_CY FLOAT,
		EBIT_NY FLOAT,
		EBIT_MARGIN_LY FLOAT,
		EBIT_MARGIN_CY FLOAT,
		EBIT_MARGIN_NY FLOAT,
		EBIT_MARGIN_DIFF_LY_CY FLOAT,
		EBIT_MARGIN_DIFF_CY_NY FLOAT,
		EPS_LY FLOAT,
		EPS_CY FLOAT,
		EPS_NY FLOAT,
		FCF_LY FLOAT,
		FCF_CY FLOAT,
		FCF_NY FLOAT,
		NET_DEBT_LY FLOAT,
		NET_DEBT_CY FLOAT,
		NET_DEBT_NY FLOAT,
		GEARING_LY FLOAT,
		GEARING_CY FLOAT,
		GEARING_NY FLOAT,
		NET_DEBT_EBITDA_LY FLOAT,
		NET_DEBT_EBITDA_CY FLOAT,
		NET_DEBT_EBITDA_NY FLOAT,
		ROE_LY FLOAT,
		ROE_CY FLOAT,
		ROE_NY FLOAT,
		FCF_YLD_LY FLOAT,
		FCF_YLD_CY FLOAT,
		FCF_YLD_NY FLOAT,
		DPS_LY FLOAT,
		DPS_CY FLOAT,
		DPS_NY FLOAT,
		PAYOUT_LY FLOAT,
		PAYOUT_CY FLOAT,
		PAYOUT_NY FLOAT,
		PE_LY FLOAT,
		PE_CY FLOAT,
		PE_NY FLOAT,
		PB_LY FLOAT,
		PB_CY FLOAT,
		PB_NY FLOAT,
		EV_SALES_CY FLOAT,
		EV_SALES_NY FLOAT,
		EV_EBITDA_CY FLOAT,
		EV_EBITDA_NY FLOAT,
		EV_EBIT_CY FLOAT,
		EV_EBIT_NY FLOAT,
		EV_CY FLOAT,
		EV_NY FLOAT,
		LIMITE_DATE FLOAT,
		TEST_DECAL FLOAT,
		SALES_NTM FLOAT,
		EBITDA_NTM FLOAT,
		CAPEX_NTM FLOAT,
		CAPEX_SALES_NTM FLOAT,
		EBIT_NTM FLOAT,
		EBIT_MARGIN_NTM FLOAT,
		EPS_NTM FLOAT,
		FCF_NTM FLOAT,
		NET_DEBT_NTM FLOAT,
		GEARING_NTM FLOAT,
		NET_DEBT_EBITDA_NTM FLOAT,
		ROE_NTM FLOAT,
		FCF_YLD_NTM FLOAT,
		DIV_YLD_NTM FLOAT,
		DPS_NTM FLOAT,
		PAYOUT_NTM FLOAT,
		PE_NTM FLOAT,
		PB_NTM FLOAT,
		EV_SALES_NTM FLOAT,
		EV_EBITDA_NTM FLOAT,
		EV_EBIT_NTM FLOAT,
		PEG_NTM FLOAT,
		EV_NTM FLOAT,
		IGROWTH_NTM FLOAT,
		PE_NTM_AVG5Y FLOAT,
		PE_NTM_AVG10Y FLOAT,
		PB_NTM_AVG5Y FLOAT,
		PB_NTM_AVG10Y FLOAT,
		EV_SALES_NTM_AVG5Y FLOAT,
		EV_SALES_NTM_AVG10Y FLOAT,
		EV_EBITDA_NTM_AVG5Y FLOAT,
		EV_EBITDA_NTM_AVG10Y FLOAT,
		EV_EBIT_NTM_AVG5Y FLOAT,
		EV_EBIT_NTM_AVG10Y FLOAT,
		PE_ON_AVG5Y FLOAT,
		PE_ON_AVG10Y FLOAT,
		PB_ON_AVG5Y FLOAT,
		PB_ON_AVG10Y FLOAT,
		EV_SALES_ON_AVG5Y FLOAT,
		EV_SALES_ON_AVG10Y FLOAT,
		EV_EBITDA_ON_AVG5Y FLOAT,
		EV_EBITDA_ON_AVG10Y FLOAT,
		EV_EBIT_ON_AVG5Y FLOAT,
		EV_EBIT_ON_AVG10Y FLOAT,
		SALES_GROWTH_CY FLOAT,
		SALES_GROWTH_NY FLOAT,
		EBIT_GROWTH_CY FLOAT,
		EBIT_GROWTH_NY FLOAT,
		EPS_GROWTH_CY FLOAT,
		EPS_GROWTH_NY FLOAT,
		SALES_GROWTH_NTM FLOAT,
		SALES_GROWTH_STM FLOAT,
		EBIT_GROWTH_NTM FLOAT,
		EBIT_GROWTH_STM FLOAT,
		EPS_GROWTH_NTM FLOAT,
		EPS_GROWTH_STM FLOAT,
		EPS_GROWTH_NTM_ANZD FLOAT,
		SALES_TREND_5YR FLOAT,
		CAPEX_TREND_5YR FLOAT,
		EBIT_TREND_5YR FLOAT,
		EPS_TREND_5YR FLOAT,
		FCF_TREND_5YR FLOAT,
		SALES_RSD FLOAT,
		CAPEX_RSD FLOAT,
		EBIT_RSD FLOAT,
		EPS_RSD FLOAT,
		FCF_RSD FLOAT,
		PERF_1M FLOAT,
		PERF_3M FLOAT,
		PERF_6M FLOAT,
		PERF_1YR FLOAT,
		PERF_MTD FLOAT,
		PERF_YTD FLOAT,
		VOL_1M FLOAT,
		VOL_3M FLOAT,
		VOL_1YR FLOAT,
		BETA_3YR FLOAT,
		PRICE_PCTIL_1M FLOAT,
		PRICE_PCTIL_3M FLOAT,
		PRICE_PCTIL_6M FLOAT,
		PRICE_PCTIL_1YR FLOAT,
		PRICE_PCTIL_5YR FLOAT,
		PRICE_52_HIGH FLOAT,
		PRICE_52_LOW FLOAT,
		TARGET FLOAT,
		TARGET_FB FLOAT,
		TARGET_UPDOWN_FB FLOAT,
		EPS_CHG_1M FLOAT,
		EPS_CHG_3M FLOAT,
		EPS_CHG_6M FLOAT,
		EPS_CHG_1YR FLOAT,
		EPS_CHG_YTD FLOAT,
		RATING_POS_PCT FLOAT,
		RATING_TOT FLOAT,
		RATING_POS_PCT_FB FLOAT,
		RATING_TOT_FB FLOAT,
		PE_VS_IND_ON_AVG5Y FLOAT,
		PE_VS_IND_NTM FLOAT,
		PE_VS_IND_AVG5Y FLOAT,


		--Inverse des ratios de valorisations
		PE_NTM_INVERSE FLOAT,
		PB_NTM_INVERSE FLOAT,
		EV_SALES_NTM_INVERSE FLOAT,
		EV_EBITDA_NTM_INVERSE FLOAT,
		EV_EBIT_NTM_INVERSE FLOAT,
		PEG_NTM_INVERSE FLOAT,
		PE_NTM_AVG5Y_INVERSE FLOAT,
		PE_NTM_AVG10Y_INVERSE FLOAT,
		PB_NTM_AVG5Y_INVERSE FLOAT,
		PB_NTM_AVG10Y_INVERSE FLOAT,
		EV_SALES_NTM_AVG5Y_INVERSE FLOAT,
		EV_SALES_NTM_AVG10Y_INVERSE FLOAT,
		EV_EBITDA_NTM_AVG5Y_INVERSE FLOAT,
		EV_EBITDA_NTM_AVG10Y_INVERSE FLOAT,
		EV_EBIT_NTM_AVG5Y_INVERSE FLOAT,
		EV_EBIT_NTM_AVG10Y_INVERSE FLOAT,
		PE_ON_AVG5Y_INVERSE FLOAT,
		PE_ON_AVG10Y_INVERSE FLOAT,
		PB_ON_AVG5Y_INVERSE FLOAT,
		PB_ON_AVG10Y_INVERSE FLOAT,
		EV_SALES_ON_AVG5Y_INVERSE FLOAT,
		EV_SALES_ON_AVG10Y_INVERSE FLOAT,
		EV_EBITDA_ON_AVG5Y_INVERSE FLOAT,
		EV_EBITDA_ON_AVG10Y_INVERSE FLOAT,
		EV_EBIT_ON_AVG5Y_INVERSE FLOAT,
		EV_EBIT_ON_AVG10Y_INVERSE FLOAT,

		--GROWTH calcul
		SALES_TREND_5YR_W FLOAT,
		SALES_RSD_W FLOAT,
		SALES_GROWTH_NTM_W FLOAT,
		SALES_GROWTH_STM_W FLOAT,
		EPS_TREND_5YR_W FLOAT,
		EPS_RSD_W FLOAT,	
		EPS_GROWTH_NTM_W FLOAT,
		EPS_GROWTH_STM_W FLOAT,
		EBIT_MARGIN_NTM_W FLOAT,
		CAPEX_SALES_NTM_W FLOAT,
		IGROWTH_NTM_W FLOAT,	
		PEG_NTM_INVERSE_W FLOAT,
		SALES_TREND_5YR_WM FLOAT,
		SALES_RSD_WM FLOAT,
		SALES_GROWTH_NTM_WM FLOAT,
		SALES_GROWTH_STM_WM FLOAT,
		EPS_TREND_5YR_WM FLOAT,
		EPS_RSD_WM FLOAT,	
		EPS_GROWTH_NTM_WM FLOAT,
		EPS_GROWTH_STM_WM FLOAT,
		EBIT_MARGIN_NTM_WM FLOAT,
		CAPEX_SALES_NTM_WM FLOAT,
		IGROWTH_NTM_WM FLOAT,	
		PEG_NTM_INVERSE_WM FLOAT,
		GROWTH_TOTAL_M FLOAT,
		GROWTH_QUINTILE_M FLOAT,
		GROWTH_RANKING_M FLOAT,				

		--VALEUR calcul
		ROE_NTM_W FLOAT,
		DIV_YLD_NTM_W FLOAT,
		PE_NTM_INVERSE_W FLOAT,
		--EV_EBITDA_ON_AVG10Y_W FLOAT,
		PB_NTM_INVERSE_W FLOAT,
		PB_ON_AVG10Y_INVERSE_W FLOAT,
		EV_EBITDA_NTM_INVERSE_W FLOAT,
		EV_EBITDA_ON_AVG10Y_INVERSE_W FLOAT,
		PE_ON_AVG10Y_INVERSE_W FLOAT,
	    ROE_NTM_WM FLOAT,
		DIV_YLD_NTM_WM FLOAT,
		PE_NTM_INVERSE_WM FLOAT,
		PE_ON_AVG10Y_INVERSE_WM FLOAT,
		PB_NTM_INVERSE_WM FLOAT,
		PB_ON_AVG10Y_INVERSE_WM FLOAT,
		EV_EBITDA_NTM_INVERSE_WM FLOAT,
		EV_EBITDA_ON_AVG10Y_INVERSE_WM FLOAT,
		VALUE_TOTAL_M FLOAT,
		VALUE_QUINTILE_M FLOAT,
		VALUE_RANKING_M FLOAT,		
		
		--GARP old calcul
		--TMVA_W  FLOAT,
		--EPS_GROWTH_STM_WS   FLOAT,
		--TMVA_WS  FLOAT,
		--GARPO_TOTAL_S FLOAT,
		--GARPO_QUINTILE_S FLOAT,
		--GARPO_RANKING_S FLOAT,
		
		--GARP new calcul
		DIV_YLD_NTM_WS  FLOAT,
		PB_NTM_INVERSE_WS FLOAT,
		PE_NTM_INVERSE_WS FLOAT,
		PE_ON_AVG5Y_INVERSE_W FLOAT,
		PB_ON_AVG5Y_INVERSE_W FLOAT,
		PE_VS_IND_ON_AVG5Y_INVERSE FLOAT,
		PE_VS_IND_ON_AVG5Y_INVERSE_W FLOAT,
		PE_VS_IND_ON_AVG5Y_INVERSE_WS FLOAT,
		PE_ON_AVG5Y_INVERSE_WS FLOAT,
		PB_ON_AVG5Y_INVERSE_WS FLOAT,
		EBIT_MARGIN_TREND_5YR FLOAT,
		EBIT_MARGIN_TREND_5YR_W FLOAT,
		EBIT_MARGIN_TREND_5YR_WS FLOAT,
		EBIT_MARGIN_RSD FLOAT,
		EBIT_MARGIN_RSD_W FLOAT,
		EBIT_MARGIN_RSD_WS FLOAT,
		EPS_RSD_WS FLOAT,
		EPS_TREND_5YR_WS FLOAT,
		EPS_GROWTH_NTM_WS FLOAT,
		ROE_NTM_WS FLOAT,
		SALES_RSD_WS FLOAT,
		SALES_TREND_5YR_WS FLOAT,
		SALES_GROWTH_NTM_WS FLOAT,
		PBT_RWA_TREND_5YR FLOAT,
		PBT_RWA_TREND_5YR_W FLOAT,
		PBT_RWA_TREND_5YR_WS FLOAT,
		PBT_RWA_RSD FLOAT,
		PBT_RWA_RSD_W FLOAT,
		PBT_RWA_RSD_WS FLOAT,
		PB_VS_IND_ON_AVG5Y FLOAT,
		PB_VS_IND_ON_AVG5Y_INVERSE FLOAT, 
		PB_VS_IND_ON_AVG5Y_INVERSE_w FLOAT, 
		PB_VS_IND_ON_AVG5Y_INVERSE_ws FLOAT,
	
		GARPN_TOTAL_S FLOAT,
		GARPN_QUINTILE_S FLOAT,
		GARPN_RANKING_S FLOAT,
		GARPN_YIELD_S FLOAT,
		GARPN_VALUE_S FLOAT,
		GARPN_GROWTH_S FLOAT,
		EXCH_RATE FLOAT,
		
		
		--Critère spécifique au secteur FGA
		LOAD_FACTOR_LY FLOAT,
		LOAD_FACTOR_CY FLOAT,
		REVENUE_PASSENGER_LY FLOAT,
		REVENUE_PASSENGER_CY FLOAT,
		PROD_PER_DAY_GROWTH_CY FLOAT,
		PROD_PER_DAY_GROWTH_NY FLOAT,
		PBT_LY FLOAT,
		PBT_CY FLOAT,
		PBT_NY FLOAT,
		PBT_GROWTH_NY FLOAT,
		PBT_GROWTH_CY FLOAT,
		P_TBV_LY FLOAT, 
		P_TBV_CY FLOAT,
		P_TBV_NY FLOAT,
		PBT_RWA_LY FLOAT,
		PBT_RWA_CY FLOAT,
		PBT_RWA_NY FLOAT,
		PBT_RWA_DIFF_LY_CY FLOAT,
		PBT_RWA_DIFF_CY_NY FLOAT,
		PBT_SALES_LY FLOAT,
		PBT_SALES_CY FLOAT,
		PBT_SALES_NY FLOAT,
		PBT_SALES_DIFF_LY_CY FLOAT,
		PBT_SALES_DIFF_CY_NY FLOAT,
		PBT_NTM FLOAT,	
		PBT_RWA_NTM FLOAT,
		COST_INCOME_LY FLOAT,
		COST_INCOME_CY FLOAT,
		COST_INCOME_NY FLOAT,
		ROTE_LY FLOAT, 
		ROTE_CY FLOAT,
		ROTE_NY FLOAT,
		RORWA_LY FLOAT, 
		RORWA_CY FLOAT,
		RORWA_NY FLOAT,
		TIER_1_CY FLOAT, 
		TIER_1_NY FLOAT,
		RWA_LY FLOAT, 
		RWA_CY FLOAT,
		RWA_NY FLOAT,
		PRICE_EUR FLOAT, 
	

		
		CONSTRAINT pk_ACT_DATA_FACTSET PRIMARY KEY(ISIN,Date)	
	);


ALTER TABLE ACT_DATA_FACTSET
ADD 



	
DROP TABLE ACT_DATA_FACTSET_AGR
CREATE TABLE ACT_DATA_FACTSET_AGR(

			--grille
			DATE DATETIME, 
			SXXP FLOAT,
			SXXA FLOAT,
			SXXE FLOAT,
			INDICE VARCHAR(15),
			ICB_INDUSTRY VARCHAR(4),
			ICB_SUPERSECTOR VARCHAR(4),		
			FGA_SECTOR VARCHAR(4),
			MARKET_CAP_EUR FLOAT,
			SALES_CY_EUR FLOAT, 
					
			SALES_LY FLOAT, 				
			SALES_CY FLOAT, 
			SALES_NY FLOAT,
			SALES_GROWTH_CY FLOAT, 				
			SALES_GROWTH_NY FLOAT,
			EBIT_LY FLOAT, 				
			EBIT_CY FLOAT, 
			EBIT_NY FLOAT,
			EBIT_GROWTH_CY FLOAT, 				
			EBIT_GROWTH_NY FLOAT,
			EPS_LY FLOAT, 
			EPS_CY FLOAT, 
			EPS_NY FLOAT, 
			EPS_GROWTH_CY FLOAT, 
			EPS_GROWTH_NY FLOAT,			
			
			EBIT_MARGIN_LY FLOAT, 				
			EBIT_MARGIN_CY FLOAT, 
			EBIT_MARGIN_NY FLOAT,
			EBIT_MARGIN_DIFF_LY_CY FLOAT,
			EBIT_MARGIN_DIFF_CY_NY FLOAT,
			ROE_LY FLOAT, 
			ROE_CY FLOAT, 
			ROE_NY FLOAT, 
			
			CAPEX_LY FLOAT, 
			CAPEX_CY FLOAT, 				
			CAPEX_NY FLOAT, 				
			CAPEX_SALES_NY FLOAT, 
			CAPEX_SALES_CY FLOAT, 				
			CAPEX_SALES_LY FLOAT, 				
			FCF_LY FLOAT, 
			FCF_CY FLOAT, 
			FCF_NY FLOAT, 
			FCF_YLD_LY FLOAT, 
			FCF_YLD_CY FLOAT, 
			FCF_YLD_NY FLOAT, 
			NET_DEBT_LY FLOAT, 
			NET_DEBT_CY FLOAT, 
			NET_DEBT_NY FLOAT, 
			GEARING_LY FLOAT, 
			GEARING_CY FLOAT, 
			GEARING_NY FLOAT, 
			NET_DEBT_EBITDA_LY FLOAT, 
			NET_DEBT_EBITDA_CY FLOAT, 
			NET_DEBT_EBITDA_NY FLOAT, 
			DPS_LY FLOAT,
			DPS_CY FLOAT,
			DPS_NY FLOAT,
			PAYOUT_LY FLOAT,
			PAYOUT_CY FLOAT,
			PAYOUT_NY FLOAT,
			PAYOUT_NTM FLOAT,

			DIV_YLD_NTM FLOAT, 
			PE_CY FLOAT, 
			PE_NY FLOAT, 
			PE_NTM_AVG5Y FLOAT, 
			PE_ON_AVG5Y FLOAT, 
			PE_ON_AVG10Y FLOAT, 
			PB_CY FLOAT, 
			PB_NY FLOAT, 
			PB_NTM_AVG5Y FLOAT, 
			PB_ON_AVG5Y FLOAT, 
			PB_ON_AVG10Y FLOAT,		
			EV_SALES_CY FLOAT,
			EV_SALES_NY FLOAT,  
			EV_SALES_NTM_AVG5Y FLOAT,
			EV_SALES_ON_AVG5Y FLOAT, 
			EV_SALES_ON_AVG10Y FLOAT,  			
			EV_EBITDA_CY FLOAT,
			EV_EBITDA_NY FLOAT,  
			EV_EBITDA_NTM_AVG5Y FLOAT,
			EV_EBITDA_ON_AVG5Y FLOAT, 
			EV_EBITDA_ON_AVG10Y FLOAT,  			
			EV_EBIT_CY FLOAT,
			EV_EBIT_NY FLOAT,  
			EV_EBIT_NTM_AVG5Y FLOAT,
			EV_EBIT_ON_AVG5Y FLOAT, 
			EV_EBIT_ON_AVG10Y FLOAT,
			
			--momentum
			PERF_MTD FLOAT,	
			PERF_YTD FLOAT,	
			PERF_1M FLOAT,	
			PERF_3M FLOAT,
			PERF_6M FLOAT,	
			PERF_1YR FLOAT,	
			BETA_3YR FLOAT,	
			VOL_1M FLOAT,	
			VOL_3M FLOAT,	
			VOL_1YR FLOAT,	
			EPS_CHG_1M FLOAT,	
			EPS_CHG_3M FLOAT,	
			EPS_CHG_6M FLOAT,	
			EPS_CHG_1YR FLOAT,	
			EPS_CHG_YTD FLOAT,
			
			--blend
			SALES_GROWTH_NTM FLOAT,
			SALES_RSD FLOAT,
			SALES_TREND_5YR FLOAT,
			EPS_GROWTH_NTM FLOAT,
			EPS_RSD FLOAT,
			EPS_TREND_5YR FLOAT,
			EBIT_MARGIN_TREND_5YR FLOAT,
			EBIT_MARGIN_RSD FLOAT,
			PBT_RWA_TREND_5YR FLOAT,
			PBT_RWA_RSD FLOAT,
			PB_NTM FLOAT,
			PE_NTM FLOAT,
			BLEND_TOTAL FLOAT, --'Score'
			BLEND_GROWTH FLOAT, --'Croissance'
			BLEND_VALUE FLOAT, --'Valeur'
			BLEND_YIELD FLOAT,
			PE_VS_IND_ON_AVG5Y FLOAT,
			
			PRICE FLOAT,
			EBITDA_MARGIN_LY FLOAT,
			EBITDA_MARGIN_CY FLOAT,
			EBITDA_MARGIN_NY FLOAT,
			PB_VS_IND_ON_AVG5Y FLOAT,
			EV_EBIT_VS_IND_ON_AVG5Y FLOAT,
			EV_EBITDA_VS_IND_ON_AVG5Y FLOAT,
			EV_SALES_VS_IND_ON_AVG5Y FLOAT,
			
			--ratio spécifique
			PBT_LY FLOAT, 
			PBT_CY FLOAT,
			PBT_NY FLOAT, 
			PBT_GROWTH_CY FLOAT, 
			PBT_GROWTH_NY FLOAT,
			P_TBV_CY FLOAT,
			P_TBV_NY FLOAT,
			P_TBV_ON_AVG5Y FLOAT,
			P_TBV_NTM_AVG5Y FLOAT,
			PBT_RWA_LY FLOAT,
			PBT_RWA_CY FLOAT,
			PBT_RWA_NY FLOAT,
			PBT_RWA_DIFF_LY_CY FLOAT,
			PBT_RWA_DIFF_CY_NY FLOAT,
			PBT_SALES_LY FLOAT
			PBT_SALES_CY FLOAT,
			PBT_SALES_NY FLOAT,
			PBT_SALES_DIFF_LY_CY FLOAT,
			PBT_SALES_DIFF_CY_NY FLOAT,
			ROTE_LY FLOAT, 
			ROTE_CY FLOAT,
			ROTE_NY FLOAT,
			RORWA_LY FLOAT, 
			RORWA_CY FLOAT,
			RORWA_NY FLOAT, 
			
			--CONSTRAINT pk_ACT_DATA_FACTSET_AGR PRIMARY KEY(Date,INDICE, ICB_INDUSTRY, ICB_SUPERSECTOR, ICB_SECTOR)			
	)	

ALTER TABLE ACT_DATA_FACTSET_agr
ADD P_TBV_NTM_AVG5Y FLOAT


ALTER TABLE ACT_DATA_FACTSET_agr
DROP COLUMN P_TBV_ON_AVG10Y

	
	
DROP TABLE ACT_DATA_FACTSET_COEF
CREATE TABLE ACT_DATA_FACTSET_COEF
	(
		PORTFOLIO VARCHAR(20),
		DATE DATETIME,
		INDICATOR VARCHAR(60),
		FINANCE FLOAT, --tout finance sauf bank
		BANK float,
		OTHERS FLOAT

		CONSTRAINT pk_ACT_DATA_FACTSET_COEF PRIMARY KEY(PORTFOLIO,DATE,INDICATOR)
	);
SELECT * FROM ACT_DATA_FACTSET_COEF



/*DROP TABLE ACT_DATA_LIQUIDITY
CREATE TABLE ACT_DATA_LIQUIDITY
	(
		date datetime,
		ISIN VARCHAR(12),
		libelle VARCHAR(120),
		defaut VARCHAR(5),
		forcer VARCHAR(5),
		unions VARCHAR(5),

		CONSTRAINT pk_ACT_DATA_LIQUIDITY PRIMARY KEY(date,ISIN)
	);
	
DROP TABLE ACT_DATA_ISR
CREATE TABLE ACT_DATA_ISR
	(
		DATE datetime,
		ISIN VARCHAR(12),
		NAME VARCHAR(120),
		SEDOL VARCHAR(7),
		EUROPE FLOAT,
		EURO FLOAT
		CONSTRAINT pk_ACT_DATA_ISR PRIMARY KEY(DATE,ISIN)
	);*/

DROP TABLE ISR_NOTE
CREATE TABLE ISR_NOTE
	(
		DATE datetime,
		ISIN VARCHAR(12),
		SEDOL VARCHAR(7),
		NAME VARCHAR(120),
		EUROPE FLOAT,
		EURO FLOAT,
		ExEURO FLOAT,
		USA FLOAT,
		CREDIT FLOAT
		CONSTRAINT pk_ISR_NOTE PRIMARY KEY(DATE,ISIN,SEDOL)
	);
	
DROP TABLE ACT_TICKER
CREATE TABLE ACT_TICKER
	(
		DATE DATETIME,
		ISIN VARCHAR(12),
		TICKER_BLOOMBERG VARCHAR(12),
		TICKER_BLOOMBERG_CORP VARCHAR(12),
		CONSTRAINT pk_ACT_TICKER PRIMARY KEY(ISIN,DATE)
	);
	

SELECT * FROM ACT_RECOMMANDATION
DROP TABLE ACT_RECOMMANDATION
CREATE TABLE ACT_RECOMMANDATION
	(
		id VARCHAR(4),
		libelle VARCHAR(20),
		CONSTRAINT pk_ACT_RECOMMANDATION PRIMARY KEY(id)
	);
	
SELECT * FROM ACT_NOTE	
DROP TABLE ACT_NOTE
CREATE TABLE ACT_NOTE
	(
		id VARCHAR(4),
		poids FLOAT,
		libelle VARCHAR(20),
		CONSTRAINT pk_ACT_NOTE PRIMARY KEY(id)
	);
	
SELECT * FROM ACT_THEME	
DROP TABLE ACT_THEME
CREATE TABLE ACT_THEME
	(
		id VARCHAR(5),
		libelle VARCHAR(50),
		valide TINYINT,
		niveau VARCHAR(12),   
		CONSTRAINT pk_ACT_THEME PRIMARY KEY(id)
	);
	
SELECT * FROM ACT_FGA_SECTOR_RECOMMANDATION
DROP TABLE ACT_FGA_SECTOR_RECOMMANDATION
CREATE TABLE ACT_FGA_SECTOR_RECOMMANDATION
	(
		date DATETIME,
		id_secteur VARCHAR(4) REFERENCES ACT_FGA_SECTOR(id),
		id_recommandation VARCHAR(4) REFERENCES ACT_RECOMMANDATION(id),
		commentaire VARCHAR(MAX),
		CONSTRAINT pk_ACT_FGA_SECTOR_RECOMMANDATION PRIMARY KEY(date,id_secteur,id_recommandation)
	);
	
CREATE TABLE ACT_ICB_SECTOR_RECOMMANDATION
    (
        date DATETIME not null,
        id_secteur VARCHAR(4) REFERENCES ACT_SECTOR(id) not null,
        id_recommandation VARCHAR(4) REFERENCES ACT_RECOMMANDATION(id) not null,
        commentaire VARCHAR(MAX),
        CONSTRAINT [pk_ACT_ICB_SECTOR_RECOMMANDATION] PRIMARY KEY CLUSTERED 
(
[date] ASC,
[id_secteur] ASC,
[id_recommandation] ASC
)
    );    
	
SELECT * FROM ACT_FGA_SECTOR_NEWS	
DROP TABLE ACT_FGA_SECTOR_NEWS
CREATE TABLE ACT_FGA_SECTOR_NEWS
	(
		id_secteur VARCHAR(4) REFERENCES ACT_FGA_SECTOR(id) PRIMARY KEY,
		libelle VARCHAR(MAX),
	);
	
SELECT * FROM ACT_SUPERSECTOR_NEWS	
DROP TABLE ACT_SUPERSECTOR_NEWS
CREATE TABLE ACT_SUPERSECTOR_NEWS
	(
		id_secteur VARCHAR(4) REFERENCES ACT_SUPERSECTOR(id) PRIMARY KEY,
		libelle VARCHAR(MAX),
	);
	
SELECT * FROM ACT_ISIN_NEWS	
DROP TABLE ACT_ISIN_NEWS
CREATE TABLE ACT_ISIN_NEWS
	(
		isin VARCHAR(12) PRIMARY KEY,
		libelle VARCHAR(MAX),
	);
	
	
/*DROP TABLE ACT_FGA_SECTOR_COMMENTAIRE
CREATE TABLE ACT_FGA_SECTOR_COMMENTAIRE
	(
		date DATETIME,
		id_secteur VARCHAR(4) REFERENCES ACT_FGA_SECTOR(id),
		commentaire VARCHAR(MAX),
		CONSTRAINT pk_ACT_FGA_SECTOR_COMMENTAIRE PRIMARY KEY(date,id_secteur)
	);*/
	
DELETE FROM ACT_FGA_SECTOR_NOTE	
DROP TABLE ACT_FGA_SECTOR_NOTE
CREATE TABLE ACT_FGA_SECTOR_NOTE
	(
		date DATETIME,
		id_secteur VARCHAR(4) REFERENCES ACT_FGA_SECTOR(id),
		id_theme VARCHAR(5) REFERENCES ACT_THEME(id),
		id_note VARCHAR(4) REFERENCES ACT_NOTE(id),
		CONSTRAINT pk_ACT_FGA_SECTOR_NOTE PRIMARY KEY(date,id_secteur,id_theme)
	);
	
	
DROP TABLE ACT_ISIN_NOTE
CREATE TABLE ACT_ISIN_NOTE
	(
		date DATETIME,
		id_secteur VARCHAR(4) REFERENCES ACT_FGA_SECTOR(id),
		id_theme VARCHAR(5) REFERENCES ACT_THEME(id),
		id_note VARCHAR(4) REFERENCES ACT_NOTE(id),
		CONSTRAINT pk_ACT_ISIN_NOTE PRIMARY KEY(date,id_secteur,id_theme)
	);
	
	
DROP TABLE ACT_FGA_SECTOR
CREATE TABLE ACT_FGA_SECTOR
	(
		id VARCHAR(4) PRIMARY KEY,
		libelle VARCHAR(100),
	);


DROP TABLE ACT_PORTFOLIO_MODEL_COMMENTAIRE
CREATE TABLE ACT_PORTFOLIO_MODEL_COMMENTAIRE
	(
		id FLOAT PRIMARY KEY,
		isin VARCHAR(12),
		libelle VARCHAR(MAX)
	)
		
DROP TABLE ACT_PORTFOLIO_MODEL
CREATE TABLE ACT_PORTFOLIO_MODEL
	(
		date_portfolio DATETIME,
		isin VARCHAR(12),
		portfolio VARCHAR(4),
		weight FLOAT,
		price_at_valid_from FLOAT,
		valid_from DATETIME,
		invalid_to DATETIME,
		id_commentaire FLOAT  REFERENCES ACT_PORTFOLIO_MODEL_COMMENTAIRE(id) 
		
		CONSTRAINT pk_ACT_PORTFOLIO_MODEL PRIMARY KEY(date_portfolio,isin,portfolio)		
	);
		
	
SELECT * FROm S2_PORT_COMPO
DROP TABLE S2_PORT_COMPO
CREATE TABLE [dbo].[S2_PORT_COMPO](
	[date] [datetime] NULL,
	[portfolio] [int] NULL,
	[isin] [varchar](12) NULL,
	[rating] [varchar](3) NULL,
	[issuerTicker] [varchar](150) NULL,
	[weight] [float] NULL
)

SELECT * FROM S2_PORT_COMPO_TEMP
DROP TABLE S2_PORT_COMPO_TEMP
CREATE TABLE [dbo].[S2_PORT_COMPO_TEMP](
	[date] datetime,
	[portfolio] int,
	[isin] [varchar](12) NULL,
	[rating] [varchar](3) NULL,
	[issuerTicker] [varchar](150) NULL,
	[weight] [float] NULL
)

SELECT * FROM S2_PORT_TOTAL
DROP TABLE S2_PORT_TOTAL
CREATE TABLE [dbo].S2_PORT_TOTAL(
	[date] datetime ,
	[portfolio] int IDENTITY(1,1),
	duration float,
	sensi float,
	life float,
	yield float,
	scr float,
	AAA float,
	AA float,
	A float,
	BBB float,
	HY float,
	defaut FLOAT,
	transition_1yr float,
	transition_5yr float,
	scr_1yr float
	
	CONSTRAINT pk_S2_PORT PRIMARY KEY(date,portfolio)
) 


SELECT * FROm S2_RATING_PARAM
DROP TABLE S2_RATING_PARAM
CREATE TABLE [dbo].S2_RATING_PARAM(
	rating VARCHAR(4),
	scr float,
	sensi Integer
) 

SELECT * FROm S2_DEFAULT order by rating,year
DROP TABLE S2_DEFAULT
CREATE TABLE S2_DEFAULT(
	rating VARCHAR(4),
	year Integer,
	defaut float,

	CONSTRAINT pk_S2_DEFAULT PRIMARY KEY(rating,year)
) 

SELECT * FROm S2_TRANSITION order by year,de,a
DROP TABLE S2_TRANSITION
CREATE TABLE S2_TRANSITION(
	de VARCHAR(4),
	a VARCHAR(4),
	proba float,
	year Integer
) 

SELECT * FROm S2_UNIVERS
DROP TABLE S2_UNIVERS
CREATE TABLE S2_UNIVERS(	
 Indexco_Identifier VARCHAR(14),
 ISIN VARCHAR(12),	
 CUSIP VARCHAR(9),
 ticker VARCHAR(6),
 Coupon_in_pct float,
 Country_Issue_ISO VaRCHAR(50),
 Report_Date DATETIME,
 Rebalancing_Date DATETIME,
 Issuer VARCHAR(150),
 Issuer_Country VARCHAR(70),
 Index_Family VARCHAR(10),
 Sector_Level0 VARCHAR(3),
 Sector_Level1 VARCHAR(50),
 Sector_Level2 VARCHAR(50),
 Sector_Level3 VARCHAR(50),
 Sector_Level4 VARCHAR(50),
 Sector_Level5 VARCHAR(50),
 Sector_Level6 VARCHAR(50),	
 Sector_Level7 VARCHAR(50),
 Sector_Level8 VARCHAR(50),
 Tier VARCHAR(5),
 Debt VARCHAR(60),
 iBoxx_Rating VARCHAR(3),
 Currency VARCHAR(3),
 First_settlement_date DATETIME,
 Interest_accrual_date DATETIME,
 First_Coupon_Date DATETIME,
 Second_Coupon_Date DATETIME,
 Penultimate_Coupon_Date DATETIME,
 Maturity_Date DATETIME,
 Coupon_Frequency FLOAT,
 Coupon_Multiple FLOAT,
 Business_Day_Convention VARCHAR(2),
 Day_Count VARCHAR(12),
 Notional_Amount FLOAT,
 Years_to_maturity FLOAT,
 Redemption_Factor FLOAT,
 Index_Weight_in_pct FLOAT,
 Average_Life FLOAT,
 Asset_Swap_Margin FLOAT,
 Market_Value FLOAT,
 Base_Market_Value FLOAT,
 Accrued_Interest FLOAT,
 Ask_Price FLOAT,
 Bid_Price FLOAT,
 Dirty_Price FLOAT,
 Index_Price FLOAT,
 Cash_Payment FLOAT,
 Coupon_Adjustment FLOAT,
 Coupon_Payment FLOAT,
 Street_Yield FLOAT,
 Annual_Yield FLOAT,
 Semi_Annual_Yield FLOAT,
 Street_Duration FLOAT,
 Street_Modified_Duration FLOAT,
 Annual_Modified_Duration FLOAT,
 Semi_Annual_Modified_Duration FLOAT,
 Street_Convexity FLOAT,
 Annual_Convexity FLOAT,
 Semi_Annual_Convexity FLOAT,
 Annual_Spread FLOAT,
 Semi_Annual_Spread FLOAT,
 Benchmark VARCHAR(12)
 	CONSTRAINT pk_S2_UNIVERS PRIMARY KEY(isin,Report_Date)
 )



BEGIN transaction

--ALTER TABLE [E2DBFGA01].[dbo].PAYS DROP CONSTRAINT FK__PAYS__id_utilisa__34E8D562

ALTER TABLE [E2DBFGA01].[dbo].PAYS ALTER COLUMN id_utilisateur varchar(7)


ALTER TABLE [E2DBFGA01].[dbo].TMP_PAYS_OMEGA DROP CONSTRAINT FK__TMP_PAYS___id_ut__463E49ED
ALTER TABLE [E2DBFGA01].[dbo].TMP_PAYS_OMEGA DROP CONSTRAINT FK__TMP_PAYS___id_ut__37C5420D

ALTER TABLE [E2DBFGA01].[dbo].TMP_PAYS_OMEGA ALTER COLUMN id_utilisateur varchar(7)

ALTER TABLE [E2DBFGA01].[dbo].TX_GROUPE DROP CONSTRAINT FK__TX_GROUPE__id_ut__4CEB477C
ALTER TABLE [E2DBFGA01].[dbo].TX_GROUPE DROP CONSTRAINT FK__TX_GROUPE__id_ut__39788055
ALTER TABLE [E2DBFGA01].[dbo].TX_GROUPE ALTER COLUMN id_utilisateur varchar(7)

ALTER TABLE [E2DBFGA01].[dbo].SECTEUR DROP CONSTRAINT FK__SECTEUR__id_util__4361DD42
ALTER TABLE [E2DBFGA01].[dbo].SECTEUR DROP CONSTRAINT FK__SECTEUR__id_util__4CF5691D
ALTER TABLE [E2DBFGA01].[dbo].SECTEUR ALTER COLUMN id_utilisateur varchar(7)

ALTER TABLE [E2DBFGA01].[dbo].SOUS_SECTEUR DROP CONSTRAINT FK__SOUS_SECT__id_ut__50C5FA01
ALTER TABLE [E2DBFGA01].[dbo].SOUS_SECTEUR DROP CONSTRAINT FK__SOUS_SECT__id_ut__454A25B4
ALTER TABLE [E2DBFGA01].[dbo].SOUS_SECTEUR ALTER COLUMN id_utilisateur varchar(7)


ALTER TABLE [E2DBFGA01].[dbo].TMP_SOUS_SECTEUR_OMEGA DROP CONSTRAINT FK__TMP_SOUS___id_ut__5772F790
ALTER TABLE [E2DBFGA01].[dbo].TMP_SOUS_SECTEUR_OMEGA DROP CONSTRAINT FK__TMP_SOUS___id_ut__491AB698
ALTER TABLE [E2DBFGA01].[dbo].TMP_SOUS_SECTEUR_OMEGA ALTER COLUMN id_utilisateur varchar(7)

ALTER TABLE [E2DBFGA01].[dbo].TMP_SECTEUR_OMEGA DROP CONSTRAINT FK__TMP_SECTE__id_ut__53A266AC
ALTER TABLE [E2DBFGA01].[dbo].TMP_SECTEUR_OMEGA DROP CONSTRAINT FK__TMP_SECTE__id_ut__47326E26
ALTER TABLE [E2DBFGA01].[dbo].TMP_SECTEUR_OMEGA ALTER COLUMN id_utilisateur varchar(7)



ALTER TABLE [E2DBFGA01].[dbo].TX_FICHIER DROP CONSTRAINT FK__TX_FICHIE__id_ut__5708E33C
ALTER TABLE [E2DBFGA01].[dbo].TX_FICHIER DROP CONSTRAINT FK__TX_FICHIE__id_ut__4BF72343
ALTER TABLE [E2DBFGA01].[dbo].TX_FICHIER ALTER COLUMN id_utilisateur varchar(7)

ALTER TABLE [E2DBFGA01].[dbo].TX_HISTO_RECOMMANDATION DROP CONSTRAINT FK__TX_HISTO___id_ut__52A420D2
ALTER TABLE [E2DBFGA01].[dbo].TX_HISTO_RECOMMANDATION DROP CONSTRAINT FK__TX_HISTO___id_ut__4C8B54C9
ALTER TABLE [E2DBFGA01].[dbo].TX_HISTO_RECOMMANDATION ALTER COLUMN id_utilisateur varchar(7)

ALTER TABLE [E2DBFGA01].[dbo].TX_HISTO_RATING DROP CONSTRAINT FK__TX_HISTO___id_ut__515009E6
ALTER TABLE [E2DBFGA01].[dbo].TX_HISTO_RATING DROP CONSTRAINT FK__TX_HISTO___id_ut__4FC7B427
ALTER TABLE [E2DBFGA01].[dbo].TX_HISTO_RATING ALTER COLUMN id_utilisateur varchar(7)

ALTER TABLE [E2DBFGA01].[dbo].TX_RECOMMANDATION_PAYS DROP CONSTRAINT FK__TX_RECOMM__id_ut__5768D5EF
ALTER TABLE [E2DBFGA01].[dbo].TX_RECOMMANDATION_PAYS DROP CONSTRAINT FK__TX_RECOMM__id_ut__50E5F592
ALTER TABLE [E2DBFGA01].[dbo].TX_RECOMMANDATION_PAYS ALTER COLUMN id_utilisateur varchar(7)


ALTER TABLE [E2DBFGA01].[dbo].TX_RECOMMANDATION_SOUS_SECTEUR DROP CONSTRAINT FK__TX_RECOMM__id_ut__5B3966D3 
ALTER TABLE [E2DBFGA01].[dbo].TX_RECOMMANDATION_SOUS_SECTEUR DROP CONSTRAINT FK__TX_RECOMM__id_ut__569ECEE8
ALTER TABLE [E2DBFGA01].[dbo].TX_RECOMMANDATION_SOUS_SECTEUR ALTER COLUMN id_utilisateur varchar(7)



ALTER TABLE [E2DBFGA01].[dbo].[UTILISATEUR] 
DROP CONSTRAINT PK__UTILISATEUR__40058253

ALTER TABLE [E2DBFGA01].[dbo].[UTILISATEUR] ALTER COLUMN id VARCHAR(7) NOT NULL

ALTER TABLE [E2DBFGA01].[dbo].[UTILISATEUR] 
ADD CONSTRAINT pk_Utilisateur PRIMARY KEY  (id)


ALTER TABLE [E2DBFGA01].[dbo].PAYS ADD CONSTRAINT fk_Utilisateur_Pays FOREIGN KEY  (id_utilisateur) REFERENCES  UTILISATEUR(id);

ALTER TABLE [E2DBFGA01].[dbo].TMP_PAYS_OMEGA ADD CONSTRAINT fk_Utilisateur_tmp_Pays_Omega FOREIGN KEY  (id_utilisateur) REFERENCES   UTILISATEUR(id);
ALTER TABLE [E2DBFGA01].[dbo].SOUS_SECTEUR ADD CONSTRAINT fk_Utilisateur_Sous_Secteur FOREIGN KEY  (id_utilisateur) REFERENCES  UTILISATEUR(id);
ALTER TABLE [E2DBFGA01].[dbo].SECTEUR ADD CONSTRAINT fk_Utilisateur_Secteur FOREIGN KEY  (id_utilisateur) REFERENCES UTILISATEUR(id)
ALTER TABLE [E2DBFGA01].[dbo].TX_GROUPE ADD CONSTRAINT fk_Utilisateur_tx_Groupe FOREIGN KEY  (id_utilisateur) REFERENCES  UTILISATEUR(id)

ALTER TABLE [E2DBFGA01].[dbo].TMP_SOUS_SECTEUR_OMEGA ADD CONSTRAINT fk_Utilisateur_tmp_Ss_secteur_omega FOREIGN KEY  (id_utilisateur) REFERENCES UTILISATEUR(id)
ALTER TABLE [E2DBFGA01].[dbo].TMP_SECTEUR_OMEGA ADD CONSTRAINT fk_Utilisateur_tmp_secteur_omega FOREIGN KEY  (id_utilisateur) REFERENCES UTILISATEUR(id)

ALTER TABLE [E2DBFGA01].[dbo].TX_FICHIER ADD CONSTRAINT fk_Utilisateur_tx_fichier FOREIGN KEY  (id_utilisateur) REFERENCES UTILISATEUR(id)
ALTER TABLE [E2DBFGA01].[dbo].TX_HISTO_RECOMMANDATION ADD CONSTRAINT fk_Utilisateur_tx_histo_recommandation FOREIGN KEY  (id_utilisateur) REFERENCES UTILISATEUR(id)
ALTER TABLE [E2DBFGA01].[dbo].TX_HISTO_RATING ADD CONSTRAINT fk_Utilisateur_tx_histo_rating FOREIGN KEY  (id_utilisateur) REFERENCES UTILISATEUR(id)
ALTER TABLE [E2DBFGA01].[dbo].TX_RECOMMANDATION_PAYS ADD CONSTRAINT fk_Utilisateur_tx_reco_pays FOREIGN KEY  (id_utilisateur) REFERENCES UTILISATEUR(id)
ALTER TABLE [E2DBFGA01].[dbo].TX_RECOMMANDATION_SOUS_SECTEUR ADD CONSTRAINT fk_Utilisateur_tx_reco_sous_secteur FOREIGN KEY  (id_utilisateur) REFERENCES UTILISATEUR(id)

commit


		
											 